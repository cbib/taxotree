*** Use main.py to interact gently with the program. ***

In Emacs:
- open main.py
- C-c C-p to open interpreter
- in the code, C-c C-l to evaluate the file
- write down "main.py"
- in the interpreter, write down "main()"

Details about main.py:
- "TotalRatio and DiffRatio": 
-- "Total Ratio" : 
* Provided two groups 1 and 2 of samples, if n is the number of assignments to common nodes in both groups (i.e. the sum of assignments in common nodes in each group), and n1 et n2 respectively the number of assignments in these two groups in non-common nodes, then Total ratio Distance is (n1 + n2 + n) - n = n1 + n2. 
--- INTERPRETATION: The more small totalRatio "Distance" is, the more alike are the samples in terms of node population. 
* It is also given in a normalized form: n/(n1 + n2 + n). [Returns +inf if n1 = n2 = n3 = ... = 0]. 
--- INTERPRETATION: The more totalRatio is close to 1, the more alike are the samples in terms of node population. 
-- "DiffRatio" : it is the symmetric of Total Ratio, that is: Diff ratio + Total ratio = 1.

- "PatternRatio": enumerates the common and specific patterns (of any length) of the two trees induced by the samples given in argument, and computes the number of nodes and assignments in each of them. It finally returns a list of (pattern,number of assignments,number of nodes) tuples for common and specific patterns. 
* PatternRatio also computes the ratio (number of assignments in common patterns)/(number of assignments in specific patterns). [ Returns +inf if number of assignments in specific patterns is zero]
--- INTERPRETATION: The more large the pattern ratio is, the more the two samples bear a strong resemblance in terms of node population and of phylogenetic proximity between the nodes.

- "Percentage of assignments in a certain group of nodes depending on samples": after selection of a group of bacterias and of a group of samples/metadatum, gives an array with the percentage of assignments to this family of bacterias depending on the samples/metadata.

**** TO IMPROVE
- "Pearson correlation coefficient": computes the Pearson correlation coefficient between a number of assignments to a group of bacterias and a group of metadatas or between the numbers of assignments to two groups of bacterias under a certain probability law.

- "Similarity coefficients between patients": measures the level of similarity between two patients (or two groups of patients) according to metadata: for N patients/groups, returns a NxN matrix M where M(i,j) is the similarity coefficient between patient i/group i and patient j/group j. Formula for such a coefficient is M(i,j) = M(j,i) = sum{for ni value in line i in the metadata matrix where nj != unknown and ni != unknown} |ni - nj| (distance). 

Details about the files:
**** actions.py ****

**** computeDiscriminatoryDistance.py ****
Compares groups of samples using the different criteria.

**** exceptions.py ****
Contains the user-defined exceptions.

**** main.py ****
Interface with the user.

**** /meta ****
Contains raw material.

**** misc.py ****
Contains useful macros.

**** normalization.py ****
Normalizes values from a list of values.

**** parsingInfo.py ****
Parses data table stored at /meta.

**** parsingMatrix.py ****
Parses occurrence matrix stored at /meta.

**** parsingTree.py ****
Parses taxonomic tree stored at /meta.

**** patternTree.py ****
Computes patternRatio.

**** pearsonCorrelation.py ****
Computes Pearson coefficient.

**** percentage.py ****
Computes array of percentage.

**** similarityCoefficient.py ****
Computes the similarity coefficient.

**** taxoTree.py ****
Implements the current version of TaxoTree.

**** totalratio.py ****
Computes totalRatio.

**** writeOnFiles ****
Helps saving results in files.

**** /files
Stores written files using writeOnFiles functions.

Comments:
*** Prior to the parsing operations, numbers have been normalized this way: ***
- Variables that will not likely be useful (number of assignments too small) are identified and put to null
- Assignment numbers have been normalized relatively to the total number of reads assigned in the taxonomic tree
- Then numbers have been centered and reduced
*** Selection of samples ***
- In most of the possible actions, you can either choose one by one the samples involved in the action or give a list of metadatum with lower (e1) and upper (e2) bounds for each of them. In this case, every sample considered must have a required value n for a certain metadatum comprised between e1 and e2, where e1 and e2 are asked to the user. [For strings, use e1 = e2; for open intervals, use e1 = -inf or e2 = +inf]

